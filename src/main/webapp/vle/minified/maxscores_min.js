function MaxScores(){this.maxScoresArray=[]}MaxScores.prototype.parseMaxScoresJSONString=function(b){b=$.parseJSON(b);return MaxScores.prototype.parseMaxScoresJSONObj(b)};MaxScores.prototype.parseMaxScoresJSONObj=function(b){var a=new MaxScores;if(b!=null)a.maxScoresArray=b;return a};MaxScores.prototype.addMaxScore=function(b,a){this.updateMaxScore(b,a)};
MaxScores.prototype.removeMaxScore=function(b){for(var a=0;a<this.maxScoresArray.length;a++)b==this.maxScoresArray[a].nodeId&&this.maxScoresArray.splice(a,1)};MaxScores.prototype.updateMaxScore=function(b,a){for(var c=!1,d=0;d<this.maxScoresArray.length;d++)if(b==this.maxScoresArray[d].nodeId)this.maxScoresArray[d].maxScoreValue=a,c=!0;c||this.maxScoresArray.push(new MaxScore(b,a))};
MaxScores.prototype.getMaxScoreValueByNodeId=function(b){for(var a=0;a<this.maxScoresArray.length;a++)if(b==this.maxScoresArray[a].nodeId)return this.maxScoresArray[a].maxScoreValue;return 0};MaxScores.prototype.mergeMaxScores=function(b){for(var a=0;a<b.maxScoresArray.length;a++){var c=b.maxScoresArray[a];this.updateMaxScore(c.nodeId,c.maxScoreValue)}};
MaxScores.prototype.getMaxScoresSum=function(b){var a=0;if(b==null)for(var c=0;c<this.maxScoresArray.length;c++){var d=this.maxScoresArray[c].maxScoreValue;a+=d}else for(c=0;c<b.length;c++)d=this.getMaxScoreValueByNodeId(b[c]),a+=d;return a};typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/grading/MaxScores.js");function MaxScore(b,a){this.nodeId=b;this.maxScoreValue=a}typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/grading/MaxScore.js");
if(typeof eventManager != 'undefined'){eventManager.fire('scriptLoaded', 'vle/minified/maxscores_min.js');}
